# This is a basic workflow to help you get started with Actions

name: Build uefi for all devices.

## Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: ["main"]
#    paths:
#      - "Binaries"
#      - "Common/**"
#      - "Features/**"
#      - "MU_BASECORE"
#      - "Silicon/Arm/**"
#      - "scripts/**"
#      - "Platforms/AndromedaPkg/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Triggers the workflow on pull request
#  pull_request:
#    types: [opened, reopened]
#    paths:
#      - "Binaries"
#      - "Common/**"
#      - "Features/**"
#      - "MU_BASECORE"
#      - "Silicon/Arm/**"
#      - "scripts/**"
#      - "Platforms/AndromedaPkg/**"

# Indicate that we are running in CI
env:
  WM_CI_BUILD: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains three jobs called "setup" "build" and "package"
  setup:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    outputs:
      matrix: ${{ steps.matrix.outputs.value }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - id: matrix
        run: |
          echo "value=[$(find ./Platforms -maxdepth 1 -type d -exec test -f '{}'/PlatformBuild.py -a -f '{}'/PlatformBuildNoSb.py \; -printf "\"%f\", ")]" >> $GITHUB_OUTPUT

  build:
    strategy:
      matrix:
        target: ${{fromJSON(needs.setup.outputs.matrix)}}

    needs: setup
    uses: Project-Aloha/mu_aloha_platforms/.github/workflows/build_platform.yml@main
    with:
      platform: ${{ matrix.target }}
    secrets: inherit

  package:
    strategy:
      matrix:
        target:
          [
            {
              platform: "KailuaPkg",
              codename: "kailua",
              chipname: "sm8550"
            },
            {
              platform: "KodiakPkg",
              codename: "kodiak",
              chipname: "sm7325"
            },
            {
              platform: "KonaPkg",
              codename: "kona",
              chipname: "sm8250"
            },
            {
              platform: "MooreaPkg",
              codename: "moorea",
              chipname: "sm7150"
            },
            {
              platform: "NapaliPkg",
              codename: "napali",
              chipname: "sdm845"
            },
            {
              platform: "IstariPkg",
              codename: "istari",
              chipname: "msm8996"
            },
            {
              platform: "NazgulPkg",
              codename: "nazgul",
              chipname: "msm8998"
            },
            {
              platform: "RennellPkg",
              codename: "rennell",
              chipname: "sm7125"
            },
            {
              platform: "PalimaPkg",
              codename: "palima",
              chipname: "sm8475"
            },
            {
              platform: "SurfaceDuo1Pkg",
              codename: "hana",
              chipname: "sm8150",
            },
            {
              platform: "SurfaceDuo2Pkg",
              codename: "lahaina",
              chipname: "sm8350",
            },
          ]

    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: Build
          merge-multiple: true

      - name: Upload ${{ matrix.target.codename }}'s Artifact
        uses: actions/upload-artifact@v4
        with:
          name: uefi-images-${{ matrix.target.codename }}-${{ matrix.target.chipname }}
          path: Build/${{ matrix.target.platform }}/ci_artifacts
          compression-level: 9
